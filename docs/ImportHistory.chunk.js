(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{103:function(e,a,t){"use strict";t.r(a);var n=function(){var e=this,a=e.$createElement;return(e._self._c||a)("input",{ref:"data",attrs:{type:"file",accept:"application/zip"},on:{change:function(a){return e.handleFiles()}}})};n._withStripped=!0;var r=t(59),i=t.n(r),s=t(61),o=t.n(s),c=t(5);function l(e){var a,t;return i.a.async((function(n){for(;;)switch(n.prev=n.next){case 0:return console.log("Importing "+e.name),n.next=3,i.a.awrap(e.internalStream("string").accumulate(null));case 3:return a=n.sent,t=JSON.parse(a),n.next=7,i.a.awrap(c.alaSqlPromise);case 7:(0,n.sent.default)("    CREATE INDEXEDDB DATABASE IF NOT EXISTS "+c.databaseName+";     ATTACH INDEXEDDB DATABASE "+c.databaseName+";     USE "+c.databaseName+";     DROP TABLE IF EXISTS "+c.historyTableName+";     CREATE TABLE "+c.historyTableName+";     SELECT artistName, trackName, msPlayed, endTime INTO "+c.historyTableName+" FROM ?;     CREATE INDEX idx_artistName ON "+c.historyTableName+" (artistName);",[t],(function(){window.vueApp.mode=1}));case 9:case"end":return n.stop()}}))}var u={methods:{handleFiles:function(){var e=this.$refs.data.files[0];o.a.loadAsync(e).then((function(e){e.filter((function(e,a){return a.name.includes("StreamingHistory")})).forEach(l)}))}}},m=t(2),p=Object(m.a)(u,n,[],!1,null,null,null);p.options.__file="src/components/ImportHistory.vue";a.default=p.exports},66:function(e,a){},68:function(e,a){}}]);